{
	"id": "c533d12ea8107a4eabbe2e21aef2c2c2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.8",
	"solcLongVersion": "0.8.8+commit.dddeac2f",
	"input": {
		"language": "Solidity",
		"sources": {
			"FundMe.sol": {
				"content": "// Get funds from users\n// Withdraw funds\n// Set a minimum fund value in USD\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ncontract FundMe{\n\n    function fund() public payable{ \n        // Want to vbe able to set a min fund value\n        // how do we send eth to this contract\n        require(msg.value > 1e18, \"Didnt send enough\"); //1e17 == 1*10**18 == 1000000000000000000\n\n\n\n\n    }\n\n    // function withdraw(){}\n}\n\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"FundMe.sol": {
				"FundMe": {
					"abi": [
						{
							"inputs": [],
							"name": "fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FundMe.sol\":136:429  contract FundMe{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FundMe.sol\":136:429  contract FundMe{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb60d4288\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"FundMe.sol\":158:397  function fund() public payable{ ... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"FundMe.sol\":318:322  1e18 */\n      0x0de0b6b3a7640000\n        /* \"FundMe.sol\":306:315  msg.value */\n      callvalue\n        /* \"FundMe.sol\":306:322  msg.value > 1e18 */\n      gt\n        /* \"FundMe.sol\":298:344  require(msg.value > 1e18, \"Didnt send enough\") */\n      tag_6\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_7\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_6:\n        /* \"FundMe.sol\":158:397  function fund() public payable{ ... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_9:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:349   */\n    tag_10:\n        /* \"#utility.yul\":322:341   */\n      0x4469646e742073656e6420656e6f756768000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:342   */\n      mstore\n        /* \"#utility.yul\":182:349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":355:721   */\n    tag_11:\n        /* \"#utility.yul\":497:500   */\n      0x00\n        /* \"#utility.yul\":518:585   */\n      tag_16\n        /* \"#utility.yul\":582:584   */\n      0x11\n        /* \"#utility.yul\":577:580   */\n      dup4\n        /* \"#utility.yul\":518:585   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":511:585   */\n      swap2\n      pop\n        /* \"#utility.yul\":594:687   */\n      tag_17\n        /* \"#utility.yul\":683:686   */\n      dup3\n        /* \"#utility.yul\":594:687   */\n      tag_10\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":712:714   */\n      0x20\n        /* \"#utility.yul\":707:710   */\n      dup3\n        /* \"#utility.yul\":703:715   */\n      add\n        /* \"#utility.yul\":696:715   */\n      swap1\n      pop\n        /* \"#utility.yul\":355:721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":727:1146   */\n    tag_8:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":980:989   */\n      dup2\n        /* \"#utility.yul\":974:978   */\n      dup2\n        /* \"#utility.yul\":970:990   */\n      sub\n        /* \"#utility.yul\":966:967   */\n      0x00\n        /* \"#utility.yul\":955:964   */\n      dup4\n        /* \"#utility.yul\":951:968   */\n      add\n        /* \"#utility.yul\":944:991   */\n      mstore\n        /* \"#utility.yul\":1008:1139   */\n      tag_19\n        /* \"#utility.yul\":1134:1138   */\n      dup2\n        /* \"#utility.yul\":1008:1139   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":1000:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":727:1146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb51549d65e5162110e30847af174d95d829f81ee035a5f8b2311887e690609264736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061011f806100206000396000f3fe608060405260043610601c5760003560e01c8063b60d4288146021575b600080fd5b60276029565b005b670de0b6b3a764000034116070576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040160679060cb565b60405180910390fd5b565b600082825260208201905092915050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b600060b76011836072565b915060c0826083565b602082019050919050565b6000602082019050818103600083015260e28160ac565b905091905056fea2646970667358221220eb51549d65e5162110e30847af174d95d829f81ee035a5f8b2311887e690609264736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB60D4288 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE GT PUSH1 0x70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x67 SWAP1 PUSH1 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4469646E742073656E6420656E6F756768000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB7 PUSH1 0x11 DUP4 PUSH1 0x72 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP3 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xE2 DUP2 PUSH1 0xAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB MLOAD SLOAD SWAP14 PUSH6 0xE5162110E308 SELFBALANCE 0xAF OR 0x4D SWAP6 0xD8 0x29 0xF8 0x1E 0xE0 CALLDATALOAD 0xA5 0xF8 0xB2 BALANCE XOR DUP8 0xE6 SWAP1 PUSH1 0x92 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "136:293:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@fund_13": {
									"entryPoint": 41,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1149:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "4469646e742073656e6420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:19:1",
																		"type": "",
																		"value": "Didnt send enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "511:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "582:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "518:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "518:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "511:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "683:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046",
																	"nodeType": "YulIdentifier",
																	"src": "594:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "594:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "696:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "707:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "703:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "489:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "497:3:1",
														"type": ""
													}
												],
												"src": "355:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "974:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "980:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "970:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "970:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1134:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1008:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1008:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1000:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "878:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:1",
														"type": ""
													}
												],
												"src": "727:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046(memPtr) {\n\n        mstore(add(memPtr, 0), \"Didnt send enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601c5760003560e01c8063b60d4288146021575b600080fd5b60276029565b005b670de0b6b3a764000034116070576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040160679060cb565b60405180910390fd5b565b600082825260208201905092915050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b600060b76011836072565b915060c0826083565b602082019050919050565b6000602082019050818103600083015260e28160ac565b905091905056fea2646970667358221220eb51549d65e5162110e30847af174d95d829f81ee035a5f8b2311887e690609264736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB60D4288 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE GT PUSH1 0x70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x67 SWAP1 PUSH1 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4469646E742073656E6420656E6F756768000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB7 PUSH1 0x11 DUP4 PUSH1 0x72 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP3 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xE2 DUP2 PUSH1 0xAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB MLOAD SLOAD SWAP14 PUSH6 0xE5162110E308 SELFBALANCE 0xAF OR 0x4D SWAP6 0xD8 0x29 0xF8 0x1E 0xE0 CALLDATALOAD 0xA5 0xF8 0xB2 BALANCE XOR DUP8 0xE6 SWAP1 PUSH1 0x92 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "136:293:0:-:0;;;;;;;;;;;;;;;;;;;;;158:239;;;:::i;:::-;;;318:4;306:9;:16;298:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;158:239::o;7:169:1:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:167::-;322:19;318:1;310:6;306:14;299:43;182:167;:::o;355:366::-;497:3;518:67;582:2;577:3;518:67;:::i;:::-;511:74;;594:93;683:3;594:93;:::i;:::-;712:2;707:3;703:12;696:19;;355:366;;;:::o;727:419::-;893:4;931:2;920:9;916:18;908:26;;980:9;974:4;970:20;966:1;955:9;951:17;944:47;1008:131;1134:4;1008:131;:::i;:::-;1000:139;;727:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "57400",
								"executionCost": "105",
								"totalCost": "57505"
							},
							"external": {
								"fund()": "409"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 136,
									"end": 429,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 136,
									"end": 429,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 429,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb51549d65e5162110e30847af174d95d829f81ee035a5f8b2311887e690609264736f6c63430008080033",
									".code": [
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "B60D4288"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 158,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 158,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 158,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 158,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 158,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 158,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 158,
											"end": 397,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 158,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 306,
											"end": 315,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 306,
											"end": 322,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 298,
											"end": 344,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 158,
											"end": 397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 182,
											"end": 349,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 341,
											"name": "PUSH",
											"source": 1,
											"value": "4469646E742073656E6420656E6F756768000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 355,
											"end": 721,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 355,
											"end": 721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 582,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 518,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 518,
											"end": 585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 585,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 518,
											"end": 585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 511,
											"end": 585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 594,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 683,
											"end": 686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 594,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 594,
											"end": 687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 687,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 594,
											"end": 687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 712,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 703,
											"end": 715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 696,
											"end": 715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 355,
											"end": 721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 355,
											"end": 721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 355,
											"end": 721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 355,
											"end": 721,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 1146,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 727,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 974,
											"end": 978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 966,
											"end": 967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 951,
											"end": 968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 944,
											"end": 991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1134,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1008,
											"end": 1139,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1139,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1008,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 1146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 727,
											"end": 1146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 1146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 1146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"fund()": "b60d4288"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"FundMe.sol\":{\"keccak256\":\"0x026e2f9a4ab91b81184fdf4d30e1093ffad484a88700ee38b5561e88b1d8c363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c629a24a5639578a9dda3fd7789a4928cc80a3763a22a1119534e2c37d05ffb\",\"dweb:/ipfs/QmdnDuPKZDgsuSpUJsa6ZfzEpYfzixbNt3u6kS3WDM3TJo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"FundMe.sol": {
				"ast": {
					"absolutePath": "FundMe.sol",
					"exportedSymbols": {
						"FundMe": [
							14
						]
					},
					"id": 15,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 14,
							"linearizedBaseContracts": [
								14
							],
							"name": "FundMe",
							"nameLocation": "145:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "188:209:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "306:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 6,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "306:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "318:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "306:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469646e742073656e6420656e6f756768",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "324:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046",
																"typeString": "literal_string \"Didnt send enough\""
															},
															"value": "Didnt send enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e8fe15c10b7f3f05cd9635e873fbbeaf6aff5bb393d876a82d135c1ab2b3046",
																"typeString": "literal_string \"Didnt send enough\""
															}
														],
														"id": 4,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "298:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "298:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "298:46:0"
											}
										]
									},
									"functionSelector": "b60d4288",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nameLocation": "167:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:0:0"
									},
									"scope": 14,
									"src": "158:239:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 15,
							"src": "136:293:0",
							"usedErrors": []
						}
					],
					"src": "111:321:0"
				},
				"id": 0
			}
		}
	}
}